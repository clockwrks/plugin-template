var s=require("enmity/managers"),n=require("enmity/ui/settings");function a(...o){return window.enmity.modules.getByProps(...o)}window.enmity.modules.common;class h extends s.Plugin{constructor(){super(...arguments),this.settings={active:!0,subjectUserId:"",targetUserId:""},this.UserStore=a("getUser","getCurrentUser"),this.UserProfileStore=a("getUserProfile"),this.PresenceStore=a("getPrimaryActivity"),this.GuildMemberStore=a("getMember")}start(){this.loadSettings(),this.settings.active&&this.loadPatches(),s.Toasts.show("Imposter plugin started (client-side only).")}stop(){s.Patcher.unpatchAll(),s.Toasts.show("Imposter plugin stopped.")}loadPatches(){s.Patcher.after("spoof-user",this.UserStore,"getUser",(t,[r],i)=>{if(r===this.settings.targetUserId){const e=this.UserStore.getUser(this.settings.subjectUserId);return{...i,username:e.username,avatar:e.avatar,globalName:e.globalName}}}),s.Patcher.after("spoof-user-profile",this.UserProfileStore,"getUserProfile",(t,[r],i)=>{if(r===this.settings.targetUserId){const e=this.UserProfileStore.getUserProfile(this.settings.subjectUserId);return{...i,badges:e.badges,bio:e.bio,pronouns:e.pronouns,themeColor:e.themeColor}}}),s.Patcher.after("spoof-user-status",this.PresenceStore,"getPrimaryActivity",(t,[r],i)=>{if(r===this.settings.targetUserId)return this.PresenceStore.getPrimaryActivity(this.settings.subjectUserId)||i}),s.Patcher.after("spoof-user-guild",this.GuildMemberStore,"getMember",(t,[r,i],e)=>{if(i===this.settings.targetUserId){const g=this.GuildMemberStore.getMember(r,this.settings.subjectUserId);return{...e,nick:(g==null?void 0:g.nick)||e.nick}}})}loadSettings(){const t=s.Data.load("Imposter","settings")||{};this.settings={...this.settings,...t}}saveSettings(){s.Data.save("Imposter","settings",this.settings),s.Patcher.unpatchAll(),this.settings.active&&this.loadPatches()}getSettingsPanel(){return n.buildSettingsPanel(n.SettingsSwitch({name:"Active",note:"Enable the plugin",value:this.settings.active,onValueChange:t=>{this.settings.active=t,this.saveSettings()}}),n.SettingsText({name:"Subject User ID",note:"User to copy identity from",value:this.settings.subjectUserId,placeholder:"User ID",onValueChange:t=>{this.settings.subjectUserId=t,this.saveSettings()}}),n.SettingsText({name:"Target User ID",note:"User to copy identity to (client-side only)",value:this.settings.targetUserId,placeholder:"User ID",onValueChange:t=>{this.settings.targetUserId=t,this.saveSettings()}}))}}module.exports=h;
