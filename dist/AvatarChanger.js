var a=require("enmity/ui/settings"),r=require("enmity/managers"),l="AvatarChanger",d="1.0.0",w="Changes your client-side profile picture to that of a specified Discord user ID.",c=[{name:"clockwrks",id:"383296127396610049"}],u="#000001",y={id:"userId",name:"Target User ID",type:"text"},g={name:l,version:d,description:w,authors:c,color:u,settings:y};function v(e){window.enmity.plugins.registerPlugin(e)}window.enmity.modules.common.Constants,window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const p=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage,window.enmity.modules.common.Toasts,window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking,window.enmity.modules.common.StyleSheet,window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;const U={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,n)=>window.enmity.modules.filters.byName(e,n),byTypeName:(e,n)=>window.enmity.modules.filters.byTypeName(e,n),byDisplayName:(e,n)=>window.enmity.modules.filters.byDisplayName(e,n)};function C(...e){return window.enmity.modules.bulk(...e)}window.enmity.modules.common;const h=({settings:e})=>{const n={active:!0,newUsername:"",...r.Data.load("LocalUsernameChanger","settings")},m=t=>{Object.assign(n,t),r.Data.save("LocalUsernameChanger","settings",n),e!=null&&e.onChange&&e.onChange("LocalUsernameChanger","settings",n)};return a.buildPanel(a.SettingsSwitch({name:"Active",note:"Enable local username override",value:n.active,onValueChange:t=>m({active:t})}),a.SettingsText({name:"New Username",note:"Enter your local username",value:n.newUsername,placeholder:"Username",onValueChange:t=>m({newUsername:t})}))},[o]=C(U.byProps("getCurrentUser","getUser"));let s,i={active:!0,newUsername:""};const b={...g,onStart(){const e=r.Data.load("LocalUsernameChanger","settings")||{};i={...i,...e},s=o.getCurrentUser,o.getCurrentUser=(...n)=>{const m=s.apply(o,n);return i.active&&i.newUsername?{...m,username:i.newUsername}:m},s=o.getUser,o.getUser=(...n)=>{var m;const t=s.apply(o,n);return i.active&&i.newUsername&&n[0]===((m=o.getCurrentUser())==null?void 0:m.id)?{...t,username:i.newUsername}:t},console.log("[LocalUsernameChanger] Plugin started.")},onStop(){s&&(o.getCurrentUser=s,o.getUser=s),console.log("[LocalUsernameChanger] Plugin stopped.")},getSettingsPanel({settings:e}){return p.createElement(h,{settings:e})}};v(b);
